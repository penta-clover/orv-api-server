services:
  api:
    image: chj7239/orv-api-server:staging
    container_name: orv_api_server
    expose:
      - "8080"
    env_file:
      - .env.staging
    depends_on:
      - postgres
    networks:
      custom_net:
        ipv4_address: 172.28.0.2

  api-proxy:
    image: jwilder/nginx-proxy
    container_name: api_proxy
    ports:
      - "443:443"
    environment:
      - VIRTUAL_HOST=staging.api.orv.im
      - LETSENCRYPT_HOST=staging.api.orv.im
      - LETSENCRYPT_EMAIL=orv@orv.im
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - proxy_certs:/etc/nginx/certs
      - proxy_vhost:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
    depends_on:
      - api
    networks:
      custom_net:
        ipv4_address: 172.28.0.3

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    depends_on:
      - api-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - proxy_certs:/etc/nginx/certs:rw
      - proxy_vhost:/etc/nginx/vhost.d:rw
      - proxy_html:/usr/share/nginx/html:rw

  postgres:
    image: postgres:16.4
    container_name: orv_postgres
    environment:
      POSTGRES_DB: orv_staging
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    ports:
      - "4321:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      custom_net:
        ipv4_address: 172.28.0.4

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"  # 모든 서비스의 엔드포인트 포트 (특히 S3는 4566)
    environment:
      - SERVICES=s3   # S3만 활성화 (여러 서비스를 동시에 활성화할 수도 있음)
      - DEFAULT_REGION=ap-northeast-2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      custom_net:
        ipv4_address: 172.28.0.5

  localstack-s3-init:
    image: amazon/aws-cli:latest
    container_name: s3_init
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=test-access
      - AWS_SECRET_ACCESS_KEY=test-secret
      - AWS_DEFAULT_REGION=ap-northeast-2
    entrypoint: [ "sh", "-c", "sleep 10 && aws --endpoint-url=http://localstack:4566 s3 mb s3://orv-s3" ]
    networks:
      custom_net:
        ipv4_address: 172.28.0.6

  localstack-proxy:
    image: jwilder/nginx-proxy
    container_name: localstack_proxy
    ports:
      - "4565:443"
    depends_on:
      - localstack
      - letsencrypt
    environment:
      - VIRTUAL_HOST=staging.api.orv.im
      - LETSENCRYPT_HOST=staging.api.orv.im
      - LETSENCRYPT_EMAIL=orv@orv.im
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - proxy_certs:/etc/nginx/certs
      - proxy_vhost:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
    networks:
      custom_net:
        ipv4_address: 172.28.0.7

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # --cleanup: 사용하지 않는 이전 이미지들을 제거, --interval: 3분마다 업데이트 체크
    command: --cleanup --interval 300 orv_api_server
    networks:
      custom_net:
        ipv4_address: 172.28.0.8

volumes:
  postgres_data:
  proxy_certs:
  proxy_vhost:
  proxy_html:

networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16