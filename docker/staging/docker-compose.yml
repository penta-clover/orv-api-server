services:
  api:
    image: chj7239/orv-api-server:staging
    container_name: orv_api_server
    ports:
      - "80:8080"
    env_file:
      - .env.staging
    depends_on:
      - postgres

  nginx:
    build: nginx
    container_name: orv_nginx
    ports:
      - "443:443"
    depends_on:
      - api

  postgres:
    image: postgres:16.4
    container_name: orv_postgres
    environment:
      POSTGRES_DB: orv_staging
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    ports:
      - "4321:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"  # 모든 서비스의 엔드포인트 포트 (특히 S3는 4566)
    environment:
      - SERVICES=s3   # S3만 활성화 (여러 서비스를 동시에 활성화할 수도 있음)
      - DEFAULT_REGION=ap-northeast-2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  localstack-s3-init:
    image: amazon/aws-cli:latest
    container_name: s3_init
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=test-access
      - AWS_SECRET_ACCESS_KEY=test-secret
      - AWS_DEFAULT_REGION=ap-northeast-2
    entrypoint: ["sh", "-c", "sleep 10 && aws --endpoint-url=http://localstack:4566 s3 mb s3://orv-s3"]

  localstack-proxy:
    build: ./localstack-proxy
    container_name: localstack_proxy
    ports:
      - "4565:443"
    depends_on:
      - localstack

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # --cleanup: 사용하지 않는 이전 이미지들을 제거, --interval: 30초마다 업데이트 체크
    command: --cleanup --interval 30 orv_api_server
volumes:
  postgres_data:
