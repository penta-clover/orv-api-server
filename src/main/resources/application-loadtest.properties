# ORV API Server Load Test Profile Configuration
# Phase 0: DB Connection Pool 최적화 설정

# 테스트 인증 활성화
test.auth.enabled=true

# 프론트엔드 콜백 URL (테스트용)
security.frontend.callback-url=http://localhost:3000/auth/callback

# JWT 설정
security.jwt.expiration=3600000
security.jwt.secret=${JWT_SECRET:test-secret-key-for-load-testing}

# DB Connection Pool 최적화 (HikariCP)
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA/Hibernate 배치 처리 최적화
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Tomcat 최적화
server.tomcat.threads.max=100
server.tomcat.threads.min-spare=50
server.tomcat.max-connections=200
server.tomcat.accept-count=100

# 로깅 설정 (테스트 시 디버깅용)
logging.level.com.orv.api=INFO
logging.level.com.orv.api.domain.auth=DEBUG
logging.level.com.orv.api.domain.reservation=DEBUG
logging.level.org.springframework.web=WARN
logging.level.com.zaxxer.hikari=DEBUG

# 테스트 환경 최적화
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
spring.cache.type=simple

# 파일 업로드 설정
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 기존 application.properties의 설정을 상속
spring.config.import=classpath:application.properties
